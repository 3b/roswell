#!/bin/sh
#|-*- mode:lisp -*-|#
#|Make executable from script.
exec ros -Q +R -- $0 "$@"
|#

(progn
  (roswell:quicklisp :environment nil)
  (unless (find-package :uiop)
    (ql:quickload :uiop :silent t)))

(defpackage :ros.script.build.3672011906
  (:use :cl))
(in-package :ros.script.build.3672011906)

(defun parse-argv (argv)
  (let* ((header "exec ros")
         (hl (length header)))
    (and (equal header (subseq argv 0 (length header)))
         (loop for last = nil then c
               for i from 0
               for c across argv
               when (and (equal #\- last)
                         (equal #\- c))
                 do (return (subseq argv hl (1- i)))))))

(defun help ()
  (format *error-output* "~&Usage: ~A build <file>~%"
          (roswell:opt "argv0")))

(defun main (&rest argv)
  (let ((file (first argv))
        opts)
    (unless file
      (help)
      (roswell:quit))
    (unless (probe-file file)
      (error "File does not exist: '~A'" file))
    (unless (equalp (pathname-type file) "ros")
      (error "Only accept ros script for build: '~A'." file))
    (with-open-file (in file)
      (loop repeat 4
            for line = (read-line in)
            when (ignore-errors (string= line "exec" :end1 4))
              do (setf opts (parse-argv line))))
    (roswell:roswell `(,opts "dump" "executable" ,@argv)
                 :interactive nil)))
;;; vim: set ft=lisp lisp:
