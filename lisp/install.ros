#!/bin/sh
#|-*- mode:lisp -*-|#
#|Install a given implementation or a system for roswell environment
exec ros -Q +R -L sbcl-bin -- $0 "$@"
|#

(progn
  (ros::ensure-asdf)
  (ros:include "util")
  (ros:include "util-install")
  (when (probe-file (merge-pathnames "setup.lisp" (ros:opt "quicklisp")))
    (ros:include "util-install-quicklisp")))

(defpackage :ros.script.install.3671936092
  (:use :cl :ros.util :ros.locations :ros.install))

(in-package :ros.script.install.3671936092)

(defun install (impl/version/tag argv)
  (read-call "quicklisp-client:register-local-projects")
  (loop
    with *ros-path* =(make-pathname :defaults (ros:opt "argv0"))
    for pos = (position #\/ impl/version/tag)
    for impl = (if pos (subseq impl/version/tag 0 pos) impl/version/tag)
    for version/tag = (when pos (subseq impl/version/tag (1+ pos)))
    for pos2 = (position #\/ version/tag)
    for version = (if pos2 (subseq version/tag 0 pos2) version/tag)
    for tag = (when pos2 (subseq version/tag (1+ pos2)))
    do (cond
         ;;registerd implementations like sbcl ccl-bin abcl etc
         ((install-impl-if-probed impl version/tag argv)
          (setf argv nil) t)
         ;;local ros file like tool.ros
         ((install-script-if-probed impl/version/tag))
         ;;asd/quicklisp registered systems which contain "roswell" directory
         ((install-system-if-probed impl/version/tag))
         ;;github registerd system like "fukamachi/sblint" checkout
         (version
          (clone-github impl version :path "local-projects" :branch tag)
          (read-call "quicklisp-client:register-local-projects")
          (or (install-impl-if-probed version nil argv)
              (install-system-if-probed version)))
         (t (format *error-output* "'~A' is not a valid target for 'install' -- It should be a name of either:
+ a quicklisp-installable system
+ a common lisp installation ~%" impl)
            (ros:quit 1)))
       (setf impl/version/tag (first argv)
             argv (rest argv))
    while argv))

(defun main (cmd impl/version/tag &rest argv)
  (declare (ignore cmd))
  (install impl/version/tag argv)
  (ros:exec `(,(ros:opt "argv0") "setup")))

;;; vim: set ft=lisp lisp:
