#!/bin/sh
#|-*- mode:lisp -*-|#
#|[WIP] indent lisp source
exec ros -Q -L sbcl-bin -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp
  (progn
    (unless (ql:where-is-system :lem)
      (roswell:roswell '("git" "clone" "https://github.com/cxxxr/lem.git"))
      (quicklisp-client:register-local-projects))
    (ql:quickload '(:swank :lem-base :lem-lisp-syntax) :silent t)))

(defpackage :ros.script.fmt.3707812168
  (:use :cl))
(in-package :ros.script.fmt.3707812168)

(defun system (path)
  (let* ((* (if (probe-file path)
                (progn 
                  (asdf:load-asd path)
                  (pathname-name path))
                path)) ;;dagerous.
         (* (asdf:find-system *)))
    (labels ((r (c)
               (typecase c
                 (asdf:system
                  (append
                   (directory (merge-pathnames "roswell/*.ros" (asdf:component-pathname c)))
                   (loop for child in (asdf:component-children c)
                         append (r child))))
                 (asdf:module
                  (loop for child in (asdf:component-children c)
                        append (r child)))
                 (asdf:cl-source-file
                  (list (asdf:component-pathname c)))
                 (t
                  (list c)))))
      (when *
        (asdf:load-system * :verbose nil)
        (r *)))))

(defun main (&rest argv)
  "go fmt like something"
  (dolist (arg (if argv
                   (loop for arg in argv
                         append (or (system arg) (list arg)))
                   (append (directory "*.lisp")
                           (directory "*.ros"))))
    (let ((buffer (lem-base:find-file-buffer arg)))
      (setf (lem-base:buffer-syntax-table buffer)
            lem-lisp-syntax:*syntax-table*)
      (setf (lem-base:variable-value 'lem-base:calc-indent-function :buffer buffer)
            'lem-lisp-syntax:calc-indent)
      (lem-base:apply-region-lines (lem-base:buffer-start-point buffer)
                                   (lem-base:buffer-end-point buffer)
                                   'lem-base:indent-line)
      (lem-base:write-to-file buffer (lem-base:buffer-filename buffer)))))
;;; vim: set ft=lisp lisp:
