platform:
  - x64
environment:
  global:
    MSYS2_BASEVER: 20150512
  matrix:
    - MSYS2_ARCH: i686
      MSYS2_BITS: 32
      MSYSTEM: MINGW32
      METHOD: cross
    - MSYS2_ARCH: x86_64
      MSYS2_BITS: 64
      MSYSTEM: MINGW64
      METHOD: cross
    - MSYS2_ARCH: i686
      MSYS2_BITS: 32
      MSYSTEM: MINGW32
      METHOD: ci

install: APPVEYOR_REPO_TAG_NAME
  - ps: If ($env:METHOD -eq "cross" -and Test-Path ("msys" + $env:MSYS2_BITS)){Write-Host "Using cached msys2"}
  - ps: If ($env:METHOD -eq "cross" -and !(Test-Path ("msys" + $env:MSYS2_BITS))){Invoke-WebRequest -UserAgent wget -Uri ("http://kent.dl.sourceforge.net/project/msys2/Base/" + $env:MSYS2_ARCH +  "/msys2-base-" + $env:MSYS2_ARCH + "-" + $env:MSYS2_BASEVER + ".tar.xz") -OutFile "msys2.tar.xz"}
  - ps: If ($env:METHOD -eq "cross" -and !(Test-Path ("msys" + $env:MSYS2_BITS))){&"7z" x msys2.tar.xz}
  - ps: If ($env:METHOD -eq "cross" -and !(Test-Path ("msys" + $env:MSYS2_BITS))){&"7z" x msys2.tar > $nul;&("msys" + $env:MSYS2_BITS + "\usr\bin\bash") -lc "";&("msys" + $env:MSYS2_BITS + "\usr\bin\bash") -lc ("for i in {1..3}; do pacman --noconfirm -Suy autoconf automake mingw-w64-"+ $env:MSYS2_ARCH + "-gcc make zlib-devel && break || sleep 15; done");&("msys" + $env:MSYS2_BITS + "\usr\bin\bash") -lc "pacman --noconfirm -R -s bash-completion tftp-hpa inetutils util-linux tzcode time rebase dash flex pax-git file bsdcpio bsdtar lndir";&("msys" + $env:MSYS2_BITS + "\usr\bin\bash") -lc "yes y|pacman --noconfirm -Sc";&("msys" + $env:MSYS2_BITS + "\autorebase.bat");}

build_script:
  - ps: If ($env:METHOD -eq "cross"){ &("msys" + $env:MSYS2_BITS + "\usr\bin\bash") -lc "mkdir /tmp;cd $APPVEYOR_BUILD_FOLDER; exec 0</dev/null; ./bootstrap; ./configure; make"}
  - cd %APPVEYOR_BUILD_FOLDER%
  - ps: If ($env:METHOD -eq "cross") {mv src roswell}
  - ps: If ($env:METHOD -eq "cross") {&"7z" a ("Roswell-" + $env:MSYS2_ARCH + ".zip") roswell/ros.exe roswell/lisp/*.*}

test_script:
  - cd %APPVEYOR_BUILD_FOLDER%\roswell
  - ros version
  - ros setup
  - ros version=t run
  - ros config
#  - ros install sbcl
#  - ros config
#  - ros -s prove-asdf -s quri-test -e "(asdf:test-system :quri-test)"
  - ps: foreach($artifactName in $artifacts.keys) { Write-Host $artifacts[$artifactName].path }

artifacts:
  - path: Roswell-x86_64.zip
    name: Roswell-x86_64.zip
  - path: Roswell-i686.zip
    name: Roswell-i686.zip

cache:
  - msys64
  - msys32
#  - msys32 -> .appveyor.yml
#  - msys64 -> .appveyor.yml
