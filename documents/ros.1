.SH name
.PP
Roswell \- Common Lisp environment setup Utility
.SH synopsis
.PP
\f[B]ros\f[] [\f[B]options\f[]] [[\f[I]command\f[] [args...]] |
[[\-\-]script [args...]]]
.SH description
Roswell is a command line tool for installing and managing Common
Lisp implementations, as well as a scripting infrastructure for
templating, writing,
executing, compiling, distributing, downloading and installing
.PP
ROSWELL\-SCRIPTS written in Common Lisp.
Currently roswell supports sbcl, ccl, clisp and ecl as its supported
lisp implementations.
.PP
For further details see \f[I]ros\-install(1)\f[].
.PP
Scripts installed by roswell will be system wide if appropriate
directory is included in PATH.
.SH subcommands
.PP
In an order of utility/frequency.
install
.PP
:Install a given implementation (e.g.
sbcl, ccl) or a system (e.g.
alexandria) for roswell environment.
See \f[I]ros\-install(1)\f[].
init [name[.ros]]
.PP
:Create a new ros script
dump [executable|output] [script]
.PP
:Dump an image of the script for the faster startup or to make an
executable.
build
.PP
:Make an executable from the script.
run
.PP
:Initiate REPL
use
.PP
:Change the default implementation used by roswell.
list
.PP
:List the various informations.
config
.PP
:Get and set the options.
setup
.PP
:Run the initial setup
emacs
.PP
:Launch emacs with slime.
wait
.PP
:Wait forever, used for daemonizing the script.
delete
.PP
:Delete an installed implementation.
version
.PP
:Show the roswell version information.
help
.PP
:Show the subcommand help.
.SH options
.PP
Options are processed in left\-to\-right order.
\-w CODE \-\-wrap CODE
.PP
:Run the script with a shell wrapper CODE, e.g.
rlwrap
\-m IMAGE \-\-image IMAGE
.PP
:Continue from Lisp image IMAGE
\-L NAME \-\-lisp NAME
.PP
:Run the script with a lisp impl NAME[/VERSION] if present, e.g.
sbcl\-bin, sbcl/1.2.16.
Fails otherwise.
\-l FILE \-\-load FILE
.PP
:Load a lisp file FILE while building
\-S X \-\-source\-registry X
.PP
:Override the source registry of asdf systems.
\-s SYSTEM \-\-system SYSTEM
.PP
:Load the asdf SYSTEM while building.
\-\-load\-system SYSTEM
.PP
:Same as above (buildapp compatibility)
\-p PACKAGE \-\-package PACKAGE
.PP
:Change the current package to PACKAGE
\-sp SP \-\-system\-package SP
.PP
:Combination of \-s SP and \-p SP
\-e FORM \-\-eval FORM
.PP
:Evaluate FORM while building
\-\-require MODULE
.PP
:require MODULE while building
\-q \-\-quit
.PP
:quit lisp here
\-r FUNC \-\-restart FUNC
.PP
:the build image restarts from calling FUNC
\-E FUNC \-\-entry FUNC
.PP
:the build image restarts from calling (FUNC argv).
\-i FORM \-\-init FORM
.PP
:evaluate FORM after the restart.
\-ip FORM \-\-print FORM
.PP
:evaluate and princ FORM after the restart
\-iw FORM \-\-write FORM
.PP
:evaluate and write FORM after the restart
\-F FORM \-\-final FORM
.PP
:evaluate FORM before dumping the IMAGE
\-R \-\-rc
.PP
:try to read /etc/rosrc, ~/.roswell/init.lisp
+R \-\-no\-rc
.PP
:skip /etc/rosrc, ~/.roswell/init.lisp
\-Q \-\-quicklisp
.PP
:load quicklisp (default)
+Q \-\-no\-quicklisp
.PP
:do not load quicklisp
\-v \-\-verbose
.PP
:be quite verbose while building
\-\-quiet
.PP
:suppress output while building (default)
\-\-test
.PP
:for test purpose
dynamic\-space\-size=[size in MB]
.PP
:SBCL specific.
The argument is passed to SBCL by \f[C]\-\-dynamic\-space\-size\f[]
.SH Environmental Variables
ROSWELL_INSTALL_DIR
.PP
:Specifies the install directory of roswell, defaulted to $HOME/.roswell
.
Roswell scripts are installed in $ROSWELL_INSTALL_DIR/bin .
ROSWELL_HTML_TEST
.PP
:
ROSWELL_BRANCH
.PP
:
ROSWELL_REPO
.PP
:
LISP_IMPLS_DIR
.PP
:
LISP_IMPLS_BIN
.PP
:
ROSWELL_TARBALL_PATH
.PP
:
ROSWELL_URI
.PP
:
.SH Bugs
.PP
Check out issues list (https://github.com/snmsts/roswell/issues)
.SH SEE ALSO
.PP
\f[I]sbcl\f[](1)
.SH Author
.PP
SANO Masatoshi
