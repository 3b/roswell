#!/bin/sh
#|-*- mode:lisp -*-|#
#|create new ros script
exec ros -Q -L sbcl-bin -- $0 "$@"
|#

;; sbcl-bin is old enough not to include UIOP on some OSes like Mac OS X.
(unless (find-package :uiop)
  (ql:quickload :uiop :silent t))

(defvar *opts* (let ((*read-eval*))
                 (read-from-string (uiop/os:getenv "ROS_OPTS"))))

(defun help (path)
  (format t "Usage: ~A [OPTIONS]~:[~;~:* ~A~] script-name~%"
          (second (assoc "argv0" *opts* :test 'equal)) path))

(defun main (subcmd cmd &optional name &rest r)
  (declare (ignore cmd r))
  (cond ((and (equal subcmd "main") name)
         (let ((script-path (make-pathname :defaults (uiop/os:getcwd)
                                           :name name
                                           :type "ros")))
           (handler-case
               (unless (with-open-file (out script-path
                                            :direction :output
                                            :if-exists nil
                                            :if-does-not-exist :create)
                         (when out
                           (format out "~@{~A~%~}"
                                   "#!/bin/sh"
                                   "#|-*- mode:lisp -*-|#"
                                   "#|" "exec ros -Q -- $0 \"$@\"" "|#"
                                   "(defun main (&rest argv)"
                                   "  (declare (ignorable argv)))")
                           (format t "~&Successfully generated: ~A~%" script-path)
                           t))
                 (format *error-output* "~&File already exists: ~A~%" script-path)
                 (uiop:quit -1))
             (error (e)
               (format *error-output* "~&~A~%" e)
               (help name)
               (uiop:quit -1)))))
        ((or (equal subcmd "help") (not name))
         (help name)
         (uiop:quit -1))))
