#!/bin/sh
#|-*- mode:lisp -*-|#
#|Delete installed implementations
exec ros +Q -m roswell -L sbcl-bin -- $0 "$@"
|#

(when (cl:find-package :ros.sub.delete)
  (push :ros.sub.delete *features*))
#-ros.sub.delete
(defpackage :ros.sub.delete
  (:use :cl))
(in-package :ros.sub.delete)
#-ros.sub.delete
(ros:quicklisp :environment nil)

#-ros.sub.delete
(unless (find-package :uiop)
  (ql:quickload :uiop :silent t))
#-ros.sub.delete
(defun homedir ()
  (ros:opt "homedir"))
#-ros.sub.delete
(defun uname ()
  (ros:roswell '("roswell-internal-use uname") :string t))
#-ros.sub.delete
(defun uname-m ()
  (ros:roswell '("roswell-internal-use uname -m") :string t))
#-ros.sub.delete
(defun config (c)
  (ros:roswell (list "config show" c) :string t))
#-ros.sub.delete
(defun (setf config) (a b)
  (ros:roswell (list "config" b a) :string t)
  a)
#-ros.sub.delete
(defun main (subcmd cmd &rest r)
  (let* ((default (config "default.lisp"))
         (verstring (format nil "~A.version" default))
         (config (format nil "~A/~A" default (config verstring))))
    (cond ((and (equal subcmd "main") r)
           (let* ((impl-name (first r))
                  (path (merge-pathnames (format nil "impls/~A/~A/~A/"
                                                 (uname-m) (uname) impl-name)
                                         (homedir))))
             (unless (position :up (pathname-directory path))
               (cond ((probe-file path)
                      (uiop/filesystem:delete-directory-tree path :validate t)
                      (format t "~&~A has successfully deleted.~%" impl-name)
                      (when (equal impl-name config)
                        (format t "~&clear config ~S~%" verstring)
                        (setf (config verstring) "")))
                     (t (format *error-output* "~&~A is not installed yet.~%" impl-name))))))
          ((or (equal subcmd "help") (not r))
           (format t "Usage: ~A [OPTIONS] ~A impl/version ~%"
                   (ros:opt "argv0") cmd)))))
