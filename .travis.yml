language: c
sudo: false
env:
  global:
    - PATH=~/.roswell/bin:~/.linuxbrew/bin:$PATH
    - ROSWELL_BRANCH=$TRAVIS_BRANCH
    - ROSWELL_INSTALL_DIR=$HOME/.roswell
    - ROSWELL_PLATFORMHTML_BASE=https://github.com/somewrite-adtech/sbcl-bin/releases/download/archives/sbcl-bin.html
    - ROSWELL_SBCL_BIN_URI=https://github.com/somewrite-adtech/sbcl-bin/releases/download/archives/
  matrix:
    - METHOD=ci LISP=alisp
    - METHOD=ci LISP=sbcl-bin ALLOW_FAILURES=NO
    - METHOD=ci LISP=cmu-bin/2016-05
    - METHOD=ci LISP=sbcl
    - METHOD=ci LISP=ecl
    - METHOD=ci LISP=clisp
    - METHOD=ci LISP=abcl
    - METHOD=ci LISP=ccl-bin
    - METHOD=brew
    - METHOD=ci LISP=sbcl/1.1.14
    - METHOD=ci LISP=ccl32
    - METHOD=ci LISP=sbcl-bin ALLOW_FAILURES=YES

os:
  - osx
  - linux

matrix:
  allow_failures:
    - env: METHOD=brew
    - env: METHOD=ci LISP=sbcl-bin ALLOW_FAILURES=YES
  include:
      - sudo: required
        os: linux
        env: METHOD=ci LISP=alisp APT_UNINSTALL="libc6-i386"
      - sudo: required
        os: linux
        env: METHOD=ci LISP=cmucl APT_UNINSTALL="libc6-i386"
      - sudo: required
        os: linux
        env: METHOD=cross XCC=i686-w64-mingw32-gcc HOST="--host=i686-w64-mingw32" PREFIX="--prefix=/usr/i686-w64-mingw32"
      - sudo: required
        os: linux
        env: METHOD=debian
      - sudo: required
        os: linux
        env: METHOD=valgrind XCFLAGS="-g -O0"
      - sudo: required
        os: linux
        env: METHOD=documents

#branches:
#  except:
#      - /^v[0-9]/

addons:
  apt:
    packages:
      - libc6-i386
#      - gcc-multilib
#      - gcc-mingw-w64-i686
#      - binutils-mingw-w64-i686
#      - wine

before_install:
  - date
  - if [ $METHOD = cross ]; then find . \( -name \*.c -o -name \*.h \) -type f|xargs wc -l -c; fi
  - if [ $METHOD = cross ]; then find . \( -name \*.lisp -o -name \*.ros \) -type f|xargs wc -l -c; fi
  - if [ $METHOD = cross ] || [ $METHOD = debian ] || [ $METHOD = documents ] || [ $METHOD = valgrind ]; then
       sudo apt-get -qq update --force-yes > /dev/null; fi
  - if [ $METHOD = brew ] && [ $TRAVIS_OS_NAME = linux ]; then
       yes ""| ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"; fi
  - if [ $METHOD = brew ] || [ $TRAVIS_OS_NAME = osx ]; then brew update;brew --env;brew config; fi
  - if [ $METHOD = brew ]; then brew update;brew doctor || true; fi

install:
  - if ! [ -f "$HOME/.rosproxy/proxy" ]; then
      curl -L https://github.com/snmsts/roswell-proxy/releases/download/v0.5/v0.5-$TRAVIS_OS_NAME.tgz |tar xzf -;
      cp proxy $HOME/.rosproxy/proxy;
    fi
  - $HOME/.rosproxy/proxy daemon
  - mkdir ~/.roswell
  - echo "ros.proxy	0	localhost:5000" > ~/.roswell/config
  - echo "proxy.http.only	0	1" >> ~/.roswell/config
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = cross ]; then sudo apt-get install -qq lcab > /dev/null; fi
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = cross ]; then git clone https://github.com/snmsts/sn.github.git ~/lisp/sn.github; fi
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = debian ]; then sudo apt-get install -qq debhelper dh-autoreconf; fi
  - if [ $METHOD = documents ]; then sudo apt-get install -qq pandoc ruby-sass; pandoc -v; fi
  - if [ $METHOD = valgrind ];  then sudo apt-get install -qq valgrind > /dev/null; fi
  - if [ $METHOD = brew ] && [ $TRAVIS_OS_NAME = linux ]; then brew install curl ; fi
  - if [ x$XCC = xi686-w64-mingw32-gcc ]; then sudo apt-get install -qq gcc-mingw-w64-i686 binutils-mingw-w64-i686; fi
  - if [ x$WINE != x ]; then sudo apt-get install -qq wine > /dev/null; fi
  - if [ x$APT_UNINSTALL != x ]; then sudo apt-get purge -qq $APT_UNINSTALL; fi

cache:
  directories:
    - $HOME/.rosproxy

script:
  - if [ "$METHOD" = "documents" ]; then
      rm documents/man/* documents/html/*;
      sh bootstrap;./configure --enable-manual-generation --enable-html-generation;make;sudo make install;
    fi
  - if [ "$METHOD" = "brew" ]; then brew install roswell --HEAD; fi
  - if [ "$METHOD" = "ci" ]; then sh ./scripts/install-for-ci.sh; fi
  - if [ "$METHOD" = "cross" ] || [ "$METHOD" = "valgrind" ] || ([ x$TRAVIS_TAG != x ] && [ $METHOD = debian ]); then
       sh bootstrap;
       CFLAGS=$XCFLAGS ./configure --disable-dependency-tracking --disable-maintainer-mode;
       make;
       sudo make install;
       make maintainer-clean;
    fi
  - if [ "$METHOD" = "cross" ]; then CC=$XCC ./configure ${PREFIX} ${HOST};make; fi
  - if [ "$METHOD" = "brew" ] || [ "$METHOD" = "ci" ]; then
       ros version;
       ros version=t run;
       ros config;
       ros install prove;
       run-prove roswell-test.asd 2>&1 ;
    fi
  - if [ "$METHOD" = "ci" ]; then ros -q run && [`ros -q run 2>&1` == ""]; fi
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = debian ]; then ros install prove;ros ./scripts/debian.ros; fi
  - cat /tmp/proxy-log || true

after_success:
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = cross ]; then lcab -q  src/ros.exe src/lisp/* ros-$XCC.cab; fi
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = cross ]; then ros ./scripts/release.ros github ros-$XCC.cab; fi
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = debian ]; then ros ./scripts/release.ros debian; fi
  - if [ "$LISP" = "sbcl-bin" ] && [ $ALLOW_FAILURES = NO]; then
       [`ros -e "(ros:ignore-shebang)" -e '(loop for x in (directory "src/lisp/*.ros") do (load x))' 2>&1` == ""];
       ros install sbcl --sbcl-bin;ros config; fi
    fi
  - if [ "$LISP" = "sbcl-bin" ] && [ $ALLOW_FAILURES = YES]; then
       ros sbcl.patchless=t install sbcl;ros config; fi
    fi
  - if [ "$METHOD" = "documents" ] || [ $METHOD = brew ]; then git config user.email "auto@example.com"; fi
  - if [ "$METHOD" = "documents" ] || [ $METHOD = brew ]; then git config user.name "Travis-CI"; fi
  - if [ x$TRAVIS_TAG != x ] && [ $METHOD = brew ] && [ $TRAVIS_OS_NAME = linux ]; then
       git clone https://github.com/roswell/homebrew-roswell/ ~/lisp/homebrew-roswell;
       ros ./scripts/homebrew.ros;
       cp ./scripts/homebrew/roswell.rb ~/lisp/homebrew-roswell/roswell.rb;
       cd ~/lisp/homebrew-roswell/;
       git add roswell.rb;
       git commit -m v`ros roswell-internal-use version`;
       git push --force --quiet "https://${GITHUB_OAUTH_TOKEN}:x-oauth-basic@github.com/roswell/homebrew-roswell.git" master > /dev/null 2>&1;
    fi
  - if [ "$METHOD" = "valgrind" ]; then ros setup; fi
  - if [ "$METHOD" = "valgrind" ]; then valgrind --leak-check=yes ros config; fi
  - if [ "$METHOD" = "documents" ]; then git branch;git status; fi
  - if [ "$METHOD" = "documents" ]; then git checkout $TRAVIS_BRANCH;git add -u;git add documents/man/* documents/html/*; fi
  - if [ "$METHOD" = "documents" ]; then git commit -m "[ci skip] documents update"; fi
  - if [ "$METHOD" = "documents" ] && [ "$TRAVIS_BRANCH" = "master" ]; then
       git push --force --quiet "https://${GITHUB_OAUTH_TOKEN}:x-oauth-basic@github.com/roswell/roswell.git" $TRAVIS_BRANCH > /dev/null 2>&1; fi
  - if [ "$METHOD" = "documents" ] && [ "$TRAVIS_BRANCH" = "master" ]; then
       git remote rename origin old;
       git remote add origin "https://${GITHUB_OAUTH_TOKEN}:x-oauth-basic@github.com/roswell/roswell.git";
       git fetch origin release;
       git fetch origin master;
       git checkout -b release origin/release;
       git branch -D master;
       git checkout -b master origin/master;
       (git log -n 1 --oneline|grep "bump version to") && (git clone https://github.com/snmsts/sn.github.git ~/lisp/sn.github;make release-2;) fi
